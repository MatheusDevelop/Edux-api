// <auto-generated />
using System;
using Eduxapi.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Eduxapi.Migrations
{
    [DbContext(typeof(Eduxcontext))]
    partial class EduxcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eduxapi.Domain.Entities.Aluno", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("alunos");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.AlunoInstituicao", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("alunoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("instituicaoid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("alunoid");

                    b.HasIndex("instituicaoid");

                    b.ToTable("alunoInstituicao");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.AlunoTurma", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("alunoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("turmaid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("alunoid");

                    b.HasIndex("turmaid");

                    b.ToTable("alunoTurmas");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Curso", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Instituicaoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Instituicaoid");

                    b.ToTable("cursos");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Curtida", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("postid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usuarioid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("postid");

                    b.HasIndex("usuarioid");

                    b.ToTable("curtidas");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Instituicao", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("instituicaos");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Objetivo", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("turmaid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("turmaid");

                    b.ToTable("objetivos");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ObjetivoAtribuido", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("alunoturmaid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("tarefa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("alunoturmaid");

                    b.ToTable("objetivosAtribuidos");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ObjetivoConcluido", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("alunoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("nota")
                        .HasColumnType("real");

                    b.Property<Guid>("objetivoid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("alunoid");

                    b.HasIndex("objetivoid");

                    b.ToTable("objetivosConcluido");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("usuarioid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("usuarioid");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Professor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("professores");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ProfessorInstituicao", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("instituicaoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("professorid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("instituicaoid");

                    b.HasIndex("professorid");

                    b.ToTable("professorInstituicao");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ProfessorTurma", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("professorid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("turmaid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("professorid");

                    b.HasIndex("turmaid");

                    b.ToTable("professorTurmas");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Rank", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("alunoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("pontos")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("alunoid");

                    b.ToTable("Rank");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.SegredoUsuario", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("segredoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usuarioid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("segredoid");

                    b.HasIndex("usuarioid");

                    b.ToTable("segredousuario");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Segredos", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nomeSegredo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("segredos");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Turma", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cursoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("instituicaoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("cursoid");

                    b.HasIndex("instituicaoid");

                    b.ToTable("turmas");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAluno")
                        .HasColumnType("bit");

                    b.Property<bool>("isInstituicao")
                        .HasColumnType("bit");

                    b.Property<bool>("isProfessor")
                        .HasColumnType("bit");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.AlunoInstituicao", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Aluno", "aluno")
                        .WithMany("instituicaos")
                        .HasForeignKey("alunoid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Eduxapi.Domain.Entities.Instituicao", "instituicao")
                        .WithMany()
                        .HasForeignKey("instituicaoid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.AlunoTurma", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Aluno", "aluno")
                        .WithMany("turmas")
                        .HasForeignKey("alunoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Eduxapi.Domain.Entities.Turma", "turma")
                        .WithMany("alunos")
                        .HasForeignKey("turmaid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Curso", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Instituicao", "Instituicao")
                        .WithMany("cursos")
                        .HasForeignKey("Instituicaoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Curtida", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Post", "post")
                        .WithMany("curtidas")
                        .HasForeignKey("postid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Eduxapi.Domain.Entities.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Objetivo", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Turma", "turma")
                        .WithMany("objetivos")
                        .HasForeignKey("turmaid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ObjetivoAtribuido", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.AlunoTurma", "alunoturma")
                        .WithMany()
                        .HasForeignKey("alunoturmaid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ObjetivoConcluido", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.AlunoTurma", "aluno")
                        .WithMany("objetivosConcluidos")
                        .HasForeignKey("alunoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Eduxapi.Domain.Entities.Objetivo", "objetivo")
                        .WithMany()
                        .HasForeignKey("objetivoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Post", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Usuario", "usuario")
                        .WithMany("posts")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ProfessorInstituicao", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Instituicao", "instituicao")
                        .WithMany()
                        .HasForeignKey("instituicaoid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Eduxapi.Domain.Entities.Professor", "professor")
                        .WithMany("instituicaos")
                        .HasForeignKey("professorid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.ProfessorTurma", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Professor", "professor")
                        .WithMany("turmas")
                        .HasForeignKey("professorid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Eduxapi.Domain.Entities.Turma", "turma")
                        .WithMany("professores")
                        .HasForeignKey("turmaid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Rank", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Aluno", "aluno")
                        .WithMany()
                        .HasForeignKey("alunoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.SegredoUsuario", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Segredos", "segredo")
                        .WithMany("segredousuario")
                        .HasForeignKey("segredoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Eduxapi.Domain.Entities.Usuario", "usuario")
                        .WithMany("segredos")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Eduxapi.Domain.Entities.Turma", b =>
                {
                    b.HasOne("Eduxapi.Domain.Entities.Curso", "curso")
                        .WithMany("turmas")
                        .HasForeignKey("cursoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Eduxapi.Domain.Entities.Instituicao", "instituicao")
                        .WithMany("turmas")
                        .HasForeignKey("instituicaoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
